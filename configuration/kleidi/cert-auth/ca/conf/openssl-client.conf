# client config to be used with intermediate ca
# Example usage:
# openssl req -config openssl-client.conf -newkey rsa:2048 -sha256 -nodes -out clientcert-intermediate.csr -outform PEM
# creates server key and CSR for signing
# sign it with the ca cert:
# openssl ca -config openssl-intermediate.conf -policy signing_policy -extensions signing_req -out clientcert-intermediate.pem -infiles clientcert-intermediate.csr
 
HOME            = .
RANDFILE        = $ENV::HOME/.rnd

####################################################################
[ req ]
default_bits       = 2048
default_keyfile    = clientkey-intermediate.pem
distinguished_name = client_distinguished_name
req_extensions     = client_req_extensions
string_mask        = utf8only

####################################################################
[ client_distinguished_name ]
countryName                 = Country Name (2 letter code)
countryName_default         = AA
 
stateOrProvinceName         = State or Province Name (full name)
stateOrProvinceName_default = AAAAA
 
localityName                = Locality Name (eg, city)
localityName_default        = AAAAA
 
organizationName            = Organization Name (eg, company)
organizationName_default    = Some Company Ltd.
commonName                  = Common Name (e.g. server FQDN or YOUR name)
commonName_default          = Kleidi-Client

####################################################################
[ client_req_extensions ]
 
subjectKeyIdentifier = hash
basicConstraints     = CA:FALSE
keyUsage             = digitalSignature, keyEncipherment
extendedKeyUsage     = serverAuth, clientAuth
subjectAltName       = @alternate_names
nsComment            = "OpenSSL Generated Certificate - Intermediate - Client"

####################################################################
[ alternate_names ]

# adjust to your needs
DNS.1  = kleidi-client.example.com
# IPv4 localhost
IP.1   = 127.0.0.1
# IPv6 localhost
IP.2   = ::1
